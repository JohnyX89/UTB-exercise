{"ast":null,"code":"var _jsxFileName = \"/home/bury/UTB/UTB-exercise/src/components/AccountInfo/AccountInfo.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { InfoItem } from \"./AccountInfo.styled\";\nimport { ButtonBlue } from \"../ButtonBlue\";\nimport { Headline } from \"../Headline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountInfo = () => {\n  _s();\n  const [dataAccount, setdataAccount] = useState({\n    Address: \"\",\n    Balance: \"\"\n  });\n  useEffect(() => {\n    handleAccountInfo();\n  });\n  const handleAccountInfo = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(res => getAccountInfo(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n  const getAccountInfo = address => {\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(balance => {\n      setdataAccount({\n        Address: address,\n        Balance: ethers.utils.formatEther(balance)\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataAccount.Address !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Headline, {\n        children: \"Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [\" Account: \", dataAccount.Address, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [\" Balance: \", dataAccount.Balance, \" ETH \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ButtonBlue, {\n      onClick: () => handleAccountInfo(),\n      children: \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(AccountInfo, \"PcA/CN32MetIpmUnnTo5UzwBXsI=\");\n_c = AccountInfo;\nexport default AccountInfo;\nvar _c;\n$RefreshReg$(_c, \"AccountInfo\");","map":{"version":3,"names":["useEffect","useState","ethers","InfoItem","ButtonBlue","Headline","AccountInfo","dataAccount","setdataAccount","Address","Balance","handleAccountInfo","window","ethereum","request","method","then","res","getAccountInfo","alert","address","params","balance","utils","formatEther"],"sources":["/home/bury/UTB/UTB-exercise/src/components/AccountInfo/AccountInfo.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { InfoItem } from \"./AccountInfo.styled\";\nimport { ButtonBlue } from \"../ButtonBlue\";\nimport { Headline } from \"../Headline\";\n\ndeclare var window: any;\n\nconst AccountInfo = () => {\n  const [dataAccount, setdataAccount] = useState({\n    Address: \"\",\n    Balance: \"\",\n  });\n\n  useEffect(() => {\n    handleAccountInfo();\n  });\n\n  const handleAccountInfo = () => {\n    if (window.ethereum) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((res: any) => getAccountInfo(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n\n  const getAccountInfo = (address: string) => {\n    window.ethereum\n      .request({\n        method: \"eth_getBalance\",\n        params: [address, \"latest\"],\n      })\n      .then((balance: number) => {\n        setdataAccount({\n          Address: address,\n          Balance: ethers.utils.formatEther(balance),\n        });\n      });\n  };\n\n  return (\n    <>\n      {dataAccount.Address !== \"\" ? (\n        <>\n          <Headline>Metamask</Headline>\n          <InfoItem> Account: {dataAccount.Address} </InfoItem>\n          <InfoItem> Balance: {dataAccount.Balance} ETH </InfoItem>\n        </>\n      ) : (\n        <ButtonBlue onClick={() => handleAccountInfo()}>\n          Connect wallet\n        </ButtonBlue>\n      )}\n    </>\n  );\n};\n\nexport default AccountInfo;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAAA;AAIvC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC7CQ,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACdW,iBAAiB,EAAE;EACrB,CAAC,CAAC;EAEF,MAAMA,iBAAiB,GAAG,MAAM;IAC9B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnBD,MAAM,CAACC,QAAQ,CACZC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC,CAC1CC,IAAI,CAAEC,GAAQ,IAAKC,cAAc,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,MAAM;MACLE,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMD,cAAc,GAAIE,OAAe,IAAK;IAC1CR,MAAM,CAACC,QAAQ,CACZC,OAAO,CAAC;MACPC,MAAM,EAAE,gBAAgB;MACxBM,MAAM,EAAE,CAACD,OAAO,EAAE,QAAQ;IAC5B,CAAC,CAAC,CACDJ,IAAI,CAAEM,OAAe,IAAK;MACzBd,cAAc,CAAC;QACbC,OAAO,EAAEW,OAAO;QAChBV,OAAO,EAAER,MAAM,CAACqB,KAAK,CAACC,WAAW,CAACF,OAAO;MAC3C,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,UACGf,WAAW,CAACE,OAAO,KAAK,EAAE,gBACzB;MAAA,wBACE,QAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC7B,QAAC,QAAQ;QAAA,yBAAYF,WAAW,CAACE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACrD,QAAC,QAAQ;QAAA,yBAAYF,WAAW,CAACG,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA,gBACxD,gBAEH,QAAC,UAAU;MAAC,OAAO,EAAE,MAAMC,iBAAiB,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAGhD,iBACA;AAEP,CAAC;AAAC,GAjDIL,WAAW;AAAA,KAAXA,WAAW;AAmDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}